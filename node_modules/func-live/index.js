import { API_URL } from "./src/config.js"
import { recursivelyUploadFilepaths } from "./src/recursivelyUploadFilepaths.js"
import axios from "axios"

export default await new Promise(async $export => {
  const response = await fetch(`${API_URL}/functions`)
  const output = (await response.json()).functions
    .reduce((acc,func) => {
      acc[func.name] = async input => {
        try {
          if(!process.env.FUNC_TOKEN) throw new Error('FUNC TOKEN REQUIRED: get it at https://tokens.wakelfow.io and set it using func.token(FUNC_TOKEN)')
          input = await recursivelyUploadFilepaths(input)
          const axiosConfig = {
            method:'POST',
            url:`${API_URL}/functions/${func.name}`,
            headers: { Authorization: `Bearer ${process.env.FUNC_TOKEN}` },
            data: {input}
          }
          const response = await axios(axiosConfig)
          return response.data?.output
        }catch(err){
          const error = JSON.stringify(err.response?.data?.error) || err.message || 'there was an error'
          throw new Error(error)
        }
      }
      return acc
    },{})

  $export(output)
})
